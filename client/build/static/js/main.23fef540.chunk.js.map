{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","title","body","posts","componentDidMount","getBlogPost","axios","get","then","response","data","setState","console","log","catch","alert","handleChange","target","name","value","submit","event","preventDefault","payload","url","method","resetUserInputs","displayBlogPost","length","map","post","index","className","this","onSubmit","type","placeholder","onChange","cols","rows","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PA4HeA,G,kNApHbC,MAAQ,CACNC,MAAO,GACPC,KAAM,GACNC,MAAO,I,EAGTC,kBAAoB,WAClB,EAAKC,e,EAIPA,YAAc,WACZC,IAAMC,IAAI,QACPC,MAAK,SAACC,GACL,IAAMC,EAAOD,EAASC,KACtB,EAAKC,SAAS,CAAER,MAAOO,IACvBE,QAAQC,IAAI,+BAEbC,OAAM,WACLC,MAAM,gC,EAIZC,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACd,EAAKR,SAAL,eAAiBO,EAAOC,K,EAI1BC,OAAS,SAACC,GACRA,EAAMC,iBAEN,IAAMC,EAAU,CACdtB,MAAO,EAAKD,MAAMC,MAClBC,KAAM,EAAKF,MAAME,MAInBI,IAAM,CACJkB,IAAK,YACLC,OAAQ,OACRf,KAAMa,IAELf,MAAK,WACJI,QAAQC,IAAI,oCACZ,EAAKa,kBACL,EAAKrB,iBAENS,OAAM,WACLF,QAAQC,IAAI,6B,EAIlBa,gBAAkB,WAChB,EAAKf,SAAS,CACZV,MAAO,GACPC,KAAM,M,EAIVyB,gBAAkB,SAACxB,GAEjB,OAAKA,EAAMyB,OAGJzB,EAAM0B,KAAI,SAACC,EAAMC,GAAP,OACf,sBAAiBC,UAAU,qBAA3B,UACE,6BAAKF,EAAK7B,QACV,4BAAI6B,EAAK5B,SAFD6B,MAJc,M,uDAgB1B,OAHAnB,QAAQC,IAAI,UAAWoB,KAAKjC,OAI1B,sBAAKgC,UAAU,MAAf,UACE,8DACA,uBAAME,SAAUD,KAAKb,OAArB,UACE,qBAAKY,UAAU,aAAf,SACE,uBACEG,KAAK,OACLjB,KAAK,QACLkB,YAAY,QACZjB,MAAOc,KAAKjC,MAAMC,MAClBoC,SAAUJ,KAAKjB,iBAGnB,qBAAKgB,UAAU,aAAf,SACE,0BACEI,YAAY,OACZlB,KAAK,OACLoB,KAAK,KACLC,KAAK,KACLpB,MAAOc,KAAKjC,MAAME,KAClBmC,SAAUJ,KAAKjB,iBAMnB,+CAGF,qBAAKgB,UAAU,QAAf,SACGC,KAAKN,gBAAgBM,KAAKjC,MAAMG,gB,GA9GzBqC,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.23fef540.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  state = {\n    title: '',\n    body: '',\n    posts: []\n  };\n\n  componentDidMount = () => {\n    this.getBlogPost();\n  };\n\n\n  getBlogPost = () => {\n    axios.get('/api')\n      .then((response) => {\n        const data = response.data;\n        this.setState({ posts: data });\n        console.log('Data has been received!!');\n      })\n      .catch(() => {\n        alert('Error retrieving data!!!');\n      });\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n\n  submit = (event) => {\n    event.preventDefault();\n\n    const payload = {\n      title: this.state.title,\n      body: this.state.body\n    };\n\n\n    axios({\n      url: '/api/save',\n      method: 'POST',\n      data: payload\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n        this.resetUserInputs();\n        this.getBlogPost();\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });;\n  };\n\n  resetUserInputs = () => {\n    this.setState({\n      title: '',\n      body: ''\n    });\n  };\n\n  displayBlogPost = (posts) => {\n\n    if (!posts.length) return null;\n\n\n    return posts.map((post, index) => (\n      <div key={index} className=\"blog-post__display\">\n        <h3>{post.title}</h3>\n        <p>{post.body}</p>\n      </div>\n    ));\n  };\n\n  render() {\n\n    console.log('State: ', this.state);\n\n    //JSX\n    return(\n      <div className=\"app\">\n        <h2>Welcome to the best app ever</h2>\n        <form onSubmit={this.submit}>\n          <div className=\"form-input\">\n            <input \n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Title\"\n              value={this.state.title}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"form-input\">\n            <textarea\n              placeholder=\"body\"\n              name=\"body\"\n              cols=\"30\"\n              rows=\"10\"\n              value={this.state.body}\n              onChange={this.handleChange}\n            >\n              \n            </textarea>\n          </div>\n\n          <button>Submit</button>\n        </form>\n\n        <div className=\"blog-\">\n          {this.displayBlogPost(this.state.posts)}\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}